{"version":3,"sources":["scripts/main.js"],"names":["waitFor","element","eventName","Promise","resolve","addEventListener","nodeName","id","printMessage","message","createMessageDiv","document","createElement","classList","add","innerText","body","appendChild","module","exports"],"mappings":";AAAA,aAEA,SAASA,EAAQC,EAASC,GACjB,OAAA,IAAIC,QAAQ,SAACC,GAClBH,EAAQI,iBAAiBH,EAAW,WAClCE,EAAQ,UAAUF,OAAAA,EACXD,qBAAAA,GAAAA,OAAAA,EAAQK,SAAiBL,UAAAA,OAAAA,EAAQM,GADjC,UAMb,IAAMC,EAAe,SAACC,GACdC,IAAAA,EAAmBC,SAASC,cAAc,OAEhDF,EAAiBG,UAAUC,IAAI,WAC/BJ,EAAiBK,UAAYN,EAE7BE,SAASK,KAAKC,YAAYP,IAG5BQ,OAAOC,QAAU,CACfnB,QAAAA,EACAQ,aAAAA","file":"main.d70c404f.js","sourceRoot":"../src","sourcesContent":["'use strict';\n\nfunction waitFor(element, eventName) {\n  return new Promise((resolve) => {\n    element.addEventListener(eventName, () => {\n      resolve(`It was ${eventName} on the element: `\n        + `${element.nodeName}, id: ${element.id}.`);\n    });\n  });\n}\n\nconst printMessage = (message) => {\n  const createMessageDiv = document.createElement('div');\n\n  createMessageDiv.classList.add('message');\n  createMessageDiv.innerText = message;\n\n  document.body.appendChild(createMessageDiv);\n};\n\nmodule.exports = {\n  waitFor,\n  printMessage,\n};\n"]}